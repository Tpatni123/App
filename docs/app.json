[{"name":"app.R","content":"library(shiny)\r\nlibrary(ggplot2)\r\nlibrary(shinythemes)\r\nlibrary(performance)\r\nlibrary(marginaleffects)\r\nlibrary(survival)\r\nlibrary(ggfortify)\r\n\r\nui <- fluidPage(\r\n  theme = shinytheme(\"darkly\"),\r\n  titlePanel(\"Stat App\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      fileInput(\"file\", \"Upload CSV File\", accept = \".csv\"),\r\n      uiOutput(\"var1Select\"),\r\n      uiOutput(\"var2Select\"),\r\n      uiOutput(\"var3Select\"),\r\n      selectInput(\"testSelect\", \"Select Test to Run\", choices = c(\"T-Test\", \"Chi-Square Test\", \"Fisher's Exact Test\", \"One-Way ANOVA\", \"Kruskal-Wallis Test\", \"Linear Regression\", \"Log-Rank Test\")),\r\n      actionButton(\"run\", \"Run Test\", class = \"btn btn-primary\"),\r\n      uiOutput(\"varClassSelect\"),\r\n      actionButton(\"convertToNumeric\", \"Convert to Numeric\", class = \"btn btn-secondary\"),\r\n      actionButton(\"convertToFactor\", \"Convert to Factor\", class = \"btn btn-secondary\")\r\n    ),\r\n    \r\n    mainPanel(\r\n      verbatimTextOutput(\"testResult\"),\r\n      verbatimTextOutput(\"testExplanation\"),\r\n      plotOutput(\"testPlot\"),\r\n      verbatimTextOutput(\"normality\"),\r\n      verbatimTextOutput(\"normalityExplanation\"),\r\n      verbatimTextOutput(\"homoscedasticity\"),\r\n      verbatimTextOutput(\"homoscedasticityExplanation\"),\r\n      verbatimTextOutput(\"expectedCounts\"),\r\n      tabsetPanel(\r\n        tabPanel(\"Data Glimpse\", tableOutput(\"dataGlimpse\"), tableOutput(\"dataClasses\"))\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  dataset <- reactiveVal(NULL)\r\n  \r\n  observe({\r\n    req(input$file)\r\n    dataset(read.csv(input$file$datapath))\r\n  })\r\n  \r\n  output$var1Select <- renderUI({\r\n    req(dataset())\r\n    label <- if (input$testSelect == \"T-Test\" | input$testSelect == \"Linear Regression\") \"Select Dependent Variable\" else if (input$testSelect == \"Log-Rank Test\") \"Select Time Variable\" else \"Select Variable 1\"\r\n    selectInput(\"var1\", label, choices = names(dataset()))\r\n  })\r\n  \r\n  output$var2Select <- renderUI({\r\n    req(dataset())\r\n    label <- if (input$testSelect == \"T-Test\" | input$testSelect == \"Linear Regression\") \"Select Independent Variable\" else if (input$testSelect == \"Log-Rank Test\") \"Select Status Variable\" else \"Select Variable 2\"\r\n    selectInput(\"var2\", label, choices = names(dataset()))\r\n  })\r\n  \r\n  output$var3Select <- renderUI({\r\n    req(dataset())\r\n    if (input$testSelect == \"Log-Rank Test\") {\r\n      selectInput(\"var3\", \"Select Group Variable\", choices = names(dataset()))\r\n    }\r\n  })\r\n  \r\n  output$testResult <- renderPrint({\r\n    req(input$run)\r\n    isolate({\r\n      \r\n      if (input$testSelect == \"T-Test\") {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        t.test(var1 ~ var2)\r\n      } else if (input$testSelect == \"Chi-Square Test\") {\r\n        chisq.test(table(var1, var2))\r\n      } else if (input$testSelect == \"Fisher's Exact Test\") {\r\n        fisher.test(table(var1, var2))\r\n      } else if (input$testSelect == \"One-Way ANOVA\") {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        summary(aov(var1 ~ var2))\r\n      } else if (input$testSelect == \"Linear Regression\") {\r\n        avg_slopes(lm( as.formula(paste(input$var1, \"~\", input$var2)),data = dataset()))\r\n      } else if (input$testSelect == \"Log-Rank Test\") {\r\n        survdiff(as.formula(paste0(\"Surv(\", input$var1, \", \", input$var2, \") ~ \", input$var3)),data = dataset())\r\n      } else {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        kruskal.test(var1 ~ var2)\r\n      }\r\n    })\r\n  })\r\n  \r\n  output$testExplanation <- renderPrint({\r\n    req(input$run)\r\n    isolate({\r\n      if (input$testSelect == \"T-Test\") {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        ttest_result <- t.test(var1 ~ var2)\r\n        if (ttest_result$p.value < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that there is a statistically significant difference between the means of the dependent variable for different levels of the independent variable.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that there is no statistically significant difference between the means of the dependent variable for different levels of the independent variable.\"\r\n        }\r\n      } else if (input$testSelect == \"Chi-Square Test\") {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        chisq_result <- chisq.test(table(var1, var2))\r\n        if (chisq_result$p.value < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that there is a statistically significant association between the variables.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that there is no statistically significant association between the variables.\"\r\n        }\r\n      } else if (input$testSelect == \"Fisher's Exact Test\") {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        fisher_result <- fisher.test(table(var1, var2))\r\n        if (fisher_result$p.value < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that there is a statistically significant association between the variables.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that there is no statistically significant association between the variables.\"\r\n        }\r\n      } else if (input$testSelect == \"One-Way ANOVA\") {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        anova_result <- aov(var1 ~ var2)\r\n        if (summary(anova_result)[[1]][[\"Pr(>F)\"]][1] < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that there is a statistically significant difference between the means of the dependent variable for different levels of the independent variable.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that there is no statistically significant difference between the means of the dependent variable for different levels of the independent variable.\"\r\n        }\r\n      } else if (input$testSelect == \"Linear Regression\") {\r\n        lm_result <- lm(as.formula(paste(input$var1, \"~\", input$var2)),data = dataset())\r\n        #summary(lm_result)\r\n        if (summary(lm_result)$coefficients[2, 4] < 0.05) {\r\n          \"The p-value for the slope is less than 0.05, indicating that there is a statistically significant relationship between the dependent and independent variables.\"\r\n        } else {\r\n          \"The p-value for the slope is greater than 0.05, indicating that there is no statistically significant relationship between the dependent and independent variables.\"\r\n        }\r\n      } else if (input$testSelect == \"Log-Rank Test\") {\r\n        logrank_result <- survdiff(as.formula(paste0(\"Surv(\", input$var1, \", \", input$var2, \") ~ \", input$var3)),data = dataset())\r\n        if (logrank_result$pvalue < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that there is a statistically significant difference in survival between the groups.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that there is no statistically significant difference in survival between the groups.\"\r\n        }\r\n      } else {\r\n        var1 <- dataset()[[input$var1]]\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        kruskal_result <- kruskal.test(var1 ~ var2)\r\n        if (kruskal_result$p.value < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that there is a statistically significant difference between the distributions of the dependent variable for different levels of the independent variable.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that there is no statistically significant difference between the distributions of the dependent variable for different levels of the independent variable.\"\r\n        }\r\n      }\r\n    })\r\n  })\r\n  \r\n  output$testPlot <- renderPlot({\r\n    req(input$run)\r\n    isolate({\r\n      if (input$testSelect == \"T-Test\" || input$testSelect == \"One-Way ANOVA\" || input$testSelect == \"Kruskal-Wallis Test\") {\r\n        ggplot(dataset(), aes(x = factor(.data[[input$var2]]), y = .data[[input$var1]])) +\r\n          geom_boxplot() +\r\n          labs(title = \"Boxplot of Dependent Variable by Independent Variable\",\r\n               x = \"Independent Variable\",\r\n               y = \"Dependent Variable\")\r\n      } else if (input$testSelect == \"Linear Regression\") {\r\n        lm_result <- lm( as.formula(paste(input$var1, \"~\", input$var2)),data = dataset())\r\n        check_model(lm_result)\r\n      } else if (input$testSelect == \"Log-Rank Test\") {\r\n        fit <- survfit(as.formula(paste0(\"Surv(\", input$var1, \", \", input$var2, \") ~ \", input$var3)), data = dataset())\r\n        ggsurvfit::ggsurvfit(fit)\r\n      } else {\r\n        ggplot(dataset(), aes(x = factor(.data[[input$var2]]), fill = factor(.data[[input$var1]]))) +\r\n          geom_bar(position = \"stack\") +\r\n          labs(title = \"Bar Plot of Variable 1 by Variable 2\",\r\n               x = \"Variable 2\",\r\n               fill = \"Variable 1\")\r\n      }\r\n    })\r\n  })\r\n  \r\n  output$normality <- renderPrint({\r\n    req(input$run, input$testSelect %in% c(\"T-Test\", \"One-Way ANOVA\"))\r\n    isolate({\r\n      var1 <- dataset()[[input$var1]]\r\n      if (input$testSelect == \"One-Way ANOVA\") {\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        lapply(split(var1, var2), shapiro.test)\r\n      } else {\r\n        shapiro.test(var1)\r\n      }\r\n    })\r\n  })\r\n  \r\n  output$normalityExplanation <- renderPrint({\r\n    req(input$run, input$testSelect %in% c(\"T-Test\", \"One-Way ANOVA\"))\r\n    isolate({\r\n      var1 <- dataset()[[input$var1]]\r\n      if (input$testSelect == \"One-Way ANOVA\") {\r\n        var2 <- as.factor(dataset()[[input$var2]])\r\n        normality_results <- lapply(split(var1, var2), shapiro.test)\r\n        sapply(normality_results, function(result) {\r\n          if (result$p.value < 0.05) {\r\n            \"The p-value is less than 0.05, indicating that the dependent variable does not follow a normal distribution for this level of the independent variable.\"\r\n          } else {\r\n            \"The p-value is greater than 0.05, indicating that the dependent variable follows a normal distribution for this level of the independent variable.\"\r\n          }\r\n        })\r\n      } else {\r\n        normality_result <- shapiro.test(var1)\r\n        if (normality_result$p.value < 0.05) {\r\n          \"The p-value is less than 0.05, indicating that the dependent variable does not follow a normal distribution.\"\r\n        } else {\r\n          \"The p-value is greater than 0.05, indicating that the dependent variable follows a normal distribution.\"\r\n        }\r\n      }\r\n    })\r\n  })\r\n  \r\n  output$homoscedasticity <- renderPrint({\r\n    req(input$run, input$testSelect %in% c(\"T-Test\", \"One-Way ANOVA\"))\r\n    isolate({\r\n      var1 <- dataset()[[input$var1]]\r\n      var2 <- as.factor(dataset()[[input$var2]])\r\n      bartlett.test(var1 ~ var2)\r\n    })\r\n  })\r\n  \r\n  output$homoscedasticityExplanation <- renderPrint({\r\n    req(input$run, input$testSelect %in% c(\"T-Test\", \"One-Way ANOVA\"))\r\n    isolate({\r\n      var1 <- dataset()[[input$var1]]\r\n      var2 <- as.factor(dataset()[[input$var2]])\r\n      homoscedasticity_result <- bartlett.test(var1 ~ var2)\r\n      if (homoscedasticity_result$p.value < 0.05) {\r\n        \"The p-value is less than 0.05, indicating that the variances of the dependent variable are not equal across the levels of the independent variable (heteroscedasticity).\"\r\n      } else {\r\n        \"The p-value is greater than 0.05, indicating that the variances of the dependent variable are equal across the levels of the independent variable (homoscedasticity).\"\r\n      }\r\n    })\r\n  })\r\n  \r\n  output$expectedCounts <- renderPrint({\r\n    req(input$run, input$testSelect == \"Chi-Square Test\")\r\n    isolate({\r\n      var1 <- dataset()[[input$var1]]\r\n      var2 <- as.factor(dataset()[[input$var2]])\r\n      chisq_result <- chisq.test(table(var1, var2))\r\n      expected_counts <- chisq_result$expected\r\n      if (any(expected_counts < 5)) {\r\n        cat(\"Note: Some expected cell counts are less than 5. Consider running Fisher's Exact Test.\\n\")\r\n      }\r\n      expected_counts\r\n    })\r\n  })\r\n  \r\n  output$varClassSelect <- renderUI({\r\n    req(dataset())\r\n    selectInput(\"varClass\", \"Select Variable to Change Class\", choices = names(dataset()))\r\n  })\r\n  \r\n  observeEvent(input$convertToNumeric, {\r\n    req(input$varClass)\r\n    data <- dataset()\r\n    data[[input$varClass]] <- as.numeric(data[[input$varClass]])\r\n    dataset(data)\r\n  })\r\n  \r\n  observeEvent(input$convertToFactor, {\r\n    req(input$varClass)\r\n    data <- dataset()\r\n    data[[input$varClass]] <- as.factor(data[[input$varClass]])\r\n    dataset(data)\r\n  })\r\n  \r\n  output$dataClasses <- renderTable({\r\n    req(dataset())\r\n    sapply(dataset(), class)\r\n  }, rownames = TRUE)\r\n  \r\n  output$dataGlimpse <- renderTable({\r\n    req(dataset())\r\n    head(dataset())\r\n  })\r\n}\r\n\r\nshinyApp(ui = ui, server = server)","type":"text"}]
